const {describe, it} = require('mocha');

const entry = require('../../../../../../../entry');
const dec = require('../../../../../dictionaries/decorate');
const but = require('../../../../../dictionaries/button-icon');
const decorate = require('../../../../../decorates');
const db = require('../../../../../database');
const data = require('./event.data');

const bef = () => decorate.befAft.before.beforeEventSystem();
const aft = () => decorate.befAft.after.after();

const test = () => {

    //// Авторизация

    const auth = () => describe('Первая авторизация, активация лицензий, добавление оператора и роли', () => {});
    //----------------------------------------------------------------------------------------------------------------//


    //// Персонал

    // Персонал / Сотрудники

    const addStaff = () => describe('Персонал / Сотрудники. Добавление сотрудника.', () => {});

    const updateStaff = () =>  describe('Персонал / Сотрудники. Редактирование сотрудника.', () => {});

    const deleteStaff = () => describe('Персонал / Сотрудники. Удаление сотрудника.', () => {});

    // Персонал / Графики работы

    const addSchedule = () => describe('Персонал / Графики работы. Добавление графика работы.', () => {});

    const updateSchedule = () => describe('Персонал / Графики работы. Редактирование графика работыи.', () => {});

    const deleteSchedule = () => describe('Персонал / Графики работы. Удаление графика работы.', () => {});

    // Персонал / Должности

    const addPosition = () => describe('Персонал / Должности. Добавление должности.', () => {});

    const updatePosition = () => describe('Персонал / Должности. Редактирование должности.', () => {});

    const deletePosition = () => describe('Персонал / Должности. Удаление должности.', () => {});

    // Персонал / Подразделения

    const addDivision = () => describe('Персонал / Подразделения. Добавление подразделения.', () => {});

    const updateDivision = () => describe('Персонал / Подразделения. Редактирование подразделения.', () => {});

    const deleteDivision = () => describe('Персонал / Подразделения. Удаление подразделения.', () => {});

    // Персонал / Праздничные дни

    const addHoliday = () => describe('Персонал / Праздничные дни. Добавление праздничного дня.', () => {});

    const updateHoliday = () => describe('Персонал / Праздничные дни. Редактирование праздничного дня.', () => {});

    const deleteHoliday = () => describe('Персонал / Праздничные дни. Удаление праздничного дня.', () => {});

    // Персонал / Дополнительные данные - вкладка Сорудник

    const addDataStaff = () => describe('Персонал / Дополнительные данные - вкладка Сорудник. Добавление дополнильных данных.', () => {});

    const updateDataStaff = () => describe('Персонал / Дополнительные данные - вкладка Сорудник. Редактирование дополнильных данных.', () => {});

    const deleteDataStaff = () => describe('Персонал / Дополнительные данные - вкладка Сорудник. Удаление дополнильных данных.', () => {});

    // Персонал / Дополнительные данные - вкладка Посетители

    const addDataVisitor = () => describe('Персонал / Дополнительные данные - вкладка Посетитель. Добавление дополнильных данных.', () => {});

    const updateDataVisitor = () => describe('Персонал / Дополнительные данные - вкладка Посетители. Редактирование дополнильных данных.', () => {});

    const deleteDataVisitor = () => describe('Персонал / Дополнительные данные - вкладка Посетители. Удаление дополнильных данных.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    //// Бюро пропусков

    // Бюро пропусков / Посетители

    const addVisitor = () => describe('Бюро пропусков / Посетители. Добавление посетителя.', () => {});

    const updateVisitor = () =>  describe('Бюро пропусков / Посетители. Редактирование посетителя.', () => {});

    const deleteVisitor = () => describe('Бюро пропусков / Посетители. Удаление посетителя.', () => {});

    // Бюро пропусков / Сотрудники

    const updatePasStaff = () =>  describe('Бюро пропусков / Сотрудники. Редактирование сотрудника.', () => {});

    // Бюро пропусков / Шаблоны доступа - вкладка Временные зоны

    const addAccessSchedule = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Временные зоны. Добавление временной зоны.', () => {});

    const updateAccessSchedule = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Временные зоны. Редактирование временной зоны.', () => {});

    const deleteAccessSchedule = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Временные зоны. Удаление временной зоны.', () => {});

    // Бюро пропусков / Шаблоны доступа - вкладка Шаблоны доступа

    const addTemplate = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Шаблоны доступа. Добавление шаблоны доступа.', () => {});

    const updateTemplate = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Шаблоны доступа. Редактирование шаблоны доступа.', () => {});

    const deleteTemplate = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Шаблоны доступа. Удаление шаблоны доступа.', () => {});

    const displayCommission = () => describe('Бюро пропусков / Шаблоны доступа - вкладка Комиссионирование. Проверка отображения.', () => {});

    // Бюро пропусков / Дизайн пропуска

    const addDesign = () => describe('Бюро пропусков / Дизайн пропуска. Добавление дизайна пропуска.', () => {});

    const updateDesign = () => describe('Бюро пропусков / Дизайн пропуска. Редактирование дизайна пропуска.', () => {});

    const deleteDesign = () => describe('Бюро пропусков / Дизайн пропуска. Удаление дизайна пропуска.', () => {});

    // Бюро пропусков / Отчет по посетителям

    const reportVisitor = () => describe('Бюро пропусков / Отчет по посетителям. Проверка отображения.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    //// Учет рабочего времени

    // Учет рабочего времени / Журнал отработанного времени

    const journalCurrent = () => describe('Учет рабочего времени / Журнал отработанного времени. Проверка отображения по умолчанию.', () => {});

    const journalDate = () => describe('Учет рабочего времени / Журнал отработанного времени. Проверка отображения c расчетом дня в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Оправдательные документы - вкладка Оправдательные

    const addDocJustification = () => describe('Учет рабочего времени / Оправдательные документы - вкладка Оправдательные. Добавление оправдательного документа.', () => {});

    const updateDocJustification= () => describe('Бюро пропусков / Оправдательные документы - вкладка Оправдательные. Редактирование оправдательного документа.', () => {});

    const deleteDocJustification = () => describe('Бюро пропусков / Оправдательные документы - вкладка Оправдательные. Удаление оправдательного документа.', () => {});

    // Учет рабочего времени / Оправдательные документы - вкладка Сверхурочные

    const addDocOvertime = () => describe('Учет рабочего времени / Оправдательные документы - вкладка Сверхурочные. Добавление сверхурочного документа.', () => {});

    const updateDocOvertime = () => describe('Бюро пропусков / Оправдательные документы - вкладка Сверхурочные. Редактирование сверхурочного документа.', () => {});

    const deleteDocOvertime = () => describe('Бюро пропусков / Оправдательные документы - вкладка Сверхурочные. Удаление сверхурочного документа.', () => {});

    // Учет рабочего времени / Оправдательные документы - вкладка Объяснительные

    const addDocExplanatory = () => describe('Учет рабочего времени / Оправдательные документы - вкладка Объяснительные. Добавление объяснительного документа.', () => {});

    const updateDocExplanatory = () => describe('Бюро пропусков / Оправдательные документы - вкладка Объяснительные. Редактирование объяснительного документа.', () => {});

    const deleteDocExplanatory= () => describe('Бюро пропусков / Оправдательные документы - вкладка Объяснительные. Удаление объяснительного документа.', () => {});

    // Учет рабочего времени / Формирование табеля

    const timesheetDisplay = () => describe('Учет рабочего времени / Формирование табеля. Проверка отображения в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Отчеты по дисциплине - вкладка Нарушители

    const reportViolator = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Нарушители. Проверка отображения по умолчанию.', () => {});

    const reportViolatorDate = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Нарушители. Проверка отображения в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Отчеты по дисциплине - вкладка Присутствующие на данный момент

    const reportPresence = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Присутствующие на данный момент. Проверка отображения.', () => {});

    // Учет рабочего времени / Отчеты по дисциплине - вкладка Отсутствующие сегодня

    const reportAbsent = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Отсутствующие сегодня. Проверка отображения.', () => {});

    // Учет рабочего времени / Отчеты по дисциплине - вкладка Опоздавшие сегодня

    const reportLate = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Опоздавшие сегодня. Проверка отображения.', () => {});

    // Учет рабочего времени / Отчеты по дисциплине - вкладка Ушедшие раньше сегодня

    const reportEarly = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Опоздавшие сегодня. Проверка отображения.', () => {});

    // Учет рабочего времени / Отчеты по дисциплине - вкладка Переаботка

    const reportOverwork = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Переработка. Проверка отображения по умолчанию.', () => {});

    const reportOverworkDate = () => describe('Учет рабочего времени / Отчеты по дисциплине - вкладка Переработка. Проверка отображения в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Отчет УРВ

    const reportURV = () => describe('Учет рабочего времени / Отчет УРВ. Проверка отображения по умолчанию.', () => {});

    const reportURVlDate = () => describe('Учет рабочего времени / Отчет УРВ. Проверка отображения c расчетом дня в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Время присуствия

    const reportTime = () => describe('Учет рабочего времени / Время присуствия. Проверка отображения по умолчанию.', () => {});

    const reportTimeDate = () => describe('Учет рабочего времени / Время присуствия. Проверка отображения в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Выданные документы - вкладка Оправдательные

    const reportSupport = () => describe('Учет рабочего времени / Выданные документы - вкладка Оправдательные. Проверка отображения по умолчанию.', () => {});

    const reportSupportDate = () => describe('Учет рабочего времени / Выданные документы - вкладка Оправдательные. Проверка отображения в период 01.06.2023 - 30.06.2023.', () => {});

    // Учет рабочего времени / Выданные документы - вкладка Сверхурочные

    const reportOver = () => describe('Учет рабочего времени / Выданные документы - вкладка Сверхурочные. Проверка отображения по умолчанию.', () => {});

    const reportOverDate = () => describe('Учет рабочего времени / Выданные документы - вкладка Сверхурочные. Проверка отображения в период 01.06.2023 - 30.06.2023.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    //// Контроль доступа

    // Контроль доступа / Отчет о проходах - вкладка Все

    const reportPrimeAll = () => describe('Контроль доступа / Отчет о проходах - вкладка Все. Проверка отображения.', () => {});

    // Контроль доступа / Отчет о проходах - вкладка Посетители

    const reportPrimeVisitor = () => describe('Контроль доступа / Отчет о проходах - вкладка Посетители. Проверка отображения.', () => {});

    // Контроль доступа / Отчет о проходах - вкладка Сотрудники

    const reportPrimeStaff = () => describe('Контроль доступа / Отчет о проходах - вкладка Сотрудники. Проверка отображения.', () => {});

    // Контроль доступа / Управление устройствами - вкладка Помещения

    const deviceManageRoom = () => describe('Контроль доступа / Управление устройствами - вкладка Помещения. Установка режима "Открыто".', () => {});

    // Контроль доступа / Управление устройствами - вкладка Устройства

    const deviceManageDevice = () => describe('Контроль доступа / Управление устройствами - вкладка Устройства. Установка режима "Контроль".', () => {});

    // Контроль доступа / Журнал верификации

    const reportVerify = () => describe('Контроль доступа / Журнал верификации. Проверка отображения.', () => {});

    // Контроль доступа / Отчет по доступа в помещения - вкладка Все

    const reportRoomAll = () => describe('Контроль доступа / Отчет по доступа в помещения - вкладка Все. Проверка отображения.', () => {});

    // Контроль доступа / Отчет по доступа в помещения - вкладка Посетители

    const reportRoomVisitor = () => describe('Контроль доступа / Отчет по доступа в помещения - вкладка Посетители. Проверка отображения.', () => {});

    // Контроль доступа / Отчет по доступа в помещения - вкладка Сотрудники

    const reportRoomStaff = () => describe('Контроль доступа / Отчет по доступа в помещения - вкладка Сотрудники. Проверка отображения.', () => {});

    // Контроль доступа / Местонахождение - вкладка Все

    const reportLocationAll = () => describe('Контроль доступа / Местонахождение - вкладка Все. Проверка отображения.', () => {});

    // Контроль доступа / Местонахождение - вкладка Посетители

    const reportLocationVisitor = () => describe('Контроль доступа / Местонахождение - вкладка Посетители. Проверка отображения.', () => {});

    // Контроль доступа / Местонахождение - вкладка Сотрудники

    const reportLocationStaff = () => describe('Контроль доступа / Местонахождение - вкладка Сотрудники. Проверка отображения.', () => {});

    // Контроль доступа / Выданные идентификаторы - вкладка Сотрудники

    const reportIDStaff = () => describe('Контроль доступа / Выданные идентификаторы - вкладка Сотрудники. Проверка отображения.', () => {});

    // Контроль доступа / Выданные идентификаторы- вкладка Посетители

    const reportIDVisitor = () => describe('Контроль доступа / Выданные идентификаторы - вкладка Посетители. Проверка отображения.', () => {});

    // Контроль доступа / Выданные идентификаторы - вкладка Все

    const reportIDAll = () => describe('Контроль доступа / Выданные идентификаторы - вкладка Все. Проверка отображения.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    //// Верификация

    // Верификация / Верификация

    const displayVerify = () => describe('Верификация / Верификация. Проверка отображения.', () => {});

    // Верификация / Конфигурация верификации

    const addVerify = () => describe('Верификация / Конфигурация верификации. Добавление конфигурации верификации.', () => {});

    const updateVerify = () => describe('Верификация / Верификация. Редактирование конфигурации верификации.', () => {});

    const deleteVerify = () => describe('Верификация / Верификация. Удаление конфигурации верификации.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    //// Заказ пропуска

    // Заказ пропуска / Заказ пропуска

    const addOrderVisitor = () => describe('Заказ пропуска / Заказ пропуска. Добавление посетителя.', () => {});

    const updateOrderVisitor = () => describe('Заказ пропуска / Заказ пропуска. Редактирование посетителя.', () => {});

    const deleteOrderVisitor= () => describe('Заказ пропуска / Заказ пропуска. Удаление посетителия.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    //// Администрирование

    // Администрирование / Конфигурация - вкладка Устройства

    const addDevice = () => describe('Администрирование / Конфигурация - вкладка Устройства. Добавление устройства и активация.', () => {});

    const deleteDevice = () => describe('Администрирование / Конфигурация - вкладка Устройства. Удаление устройства.', () => {});

    // Администрирование / Конфигурация - вкладка Помещения

    const addRoom = () => describe('Администрирование / Конфигурация - вкладка Помещения. Добавление помещения.', () => {});

    const updateRoom = () => describe('Администрирование / Конфигурация - вкладка Помещения. Редактирование помещения.', () => {});

    const deleteRoom = () => describe('Администрирование / Конфигурация - вкладка Помещения. Удаление помещения.', () => {});

    const addRoomDevice = () => describe('Администрирование / Конфигурация - вкладка Устройства. Добавление устройства в помещение.', () => {});

    const deleteRoomDevice = () => describe('Администрирование / Конфигурация - вкладка Устройства. Удаление устройства в помещение.', () => {});

    // Администрирование / Конфигурация - вкладка Событие

    const addRenameEvent = () => describe('Администрирование / Конфигурация - вкладка События. Добавление события.', () => {});

    const deleteRenameEvent = () => describe('Администрирование / Конфигурация - вкладка События. Удаление события.', () => {});

    // Администрирование / Конфигурация - вкладка Шаблоны камер

    const addCameraTemplate = () => describe('Администрирование / Конфигурация - вкладка Шаблоны камер. Добавление шаблона камеры.', () => {});

    const updateCameraTemplate = () => describe('Администрирование / Конфигурация - вкладка Шаблоны камер. Редактирование шаблона камеры.', () => {});

    const deleteCameraTemplate = () => describe('Администрирование / Конфигурация - вкладка Шаблоны камер. Удаление шаблона камеры.', () => {});

    // Администрирование / Конфигурация - вкладка Системы

    const displaySystem = () => describe('Администрирование / Конфигурация - вкладка Системы. Проверка отображения.', () => {});

    // Администрирование / События системы

    const displayEvent = () => describe('Администрирование / События системы. Проверка отображения.', () => {});

    // Администрирование / Реакции на события

    const addEventAction = () => describe('Администрирование / Реакции на события. Добавление реакции на события.', () => {});

    const updateEventAction = () => describe('Администрирование / Реакции на события. Редактирование реакции на события.', () => {});

    const deleteEventAction = () => describe('Администрирование / Реакции на события. Удаление реакции на события.', () => {});

    // Администрирование / Задания

    const addTask = () => describe('Администрирование / Задания. Добавление задания.', () => {});

    const updateTask = () => describe('Администрирование / Задания. Редактирование задания.', () => {});

    const deleteTask = () => describe('Администрирование / Задания. Удаление задания.', () => {});

    // Администрирование / Операторы

    const addOperator = () => describe('Администрирование / Операторы. Добавление оператора.', () => {});

    const updateOperator= () => describe('Администрирование / Операторы. Редактирование оператора.', () => {});

    const deleteOperator= () => describe('Администрирование / Операторы. Удаление оператора.', () => {});

    // Администрирование / Роли и права операторов

    const addRole = () => describe('Администрирование / Операторы. Добавление роли.', () => {});

    const updateRole = () => describe('Администрирование / Операторы. Редактирование роли.', () => {});

    const deleteRole = () => describe('Администрирование / Операторы. Удаление роли.', () => {});

    //----------------------------------------------------------------------------------------------------------------//


    const deAuth = () => describe('Удаление оператора, роли и отключение лицензий.', () => {});
    //----------------------------------------------------------------------------------------------------------------//



    return {

    }
}

module.exports = {
    test: test(),
}